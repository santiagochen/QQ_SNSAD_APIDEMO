package com.santiago.qqsns  {	import flash.display.MovieClip;	import fl.controls.Button;	import fl.controls.CheckBox;	import flash.text.TextField;	import fl.controls.TextInput;	import fl.controls.RadioButton;	import fl.controls.Label;	import fl.controls.NumericStepper;		public class SubOrder extends MovieClip{				private var _orderView:String="im/get_baseinfo";		/*all Elements below:*/		//im/get_baseinfo		private var c_nick:CheckBox = new CheckBox;		private var c_gender:CheckBox = new CheckBox;		private var c_head:CheckBox = new CheckBox;		//im/get_mailaddress		private var c_mail:CheckBox = new CheckBox;		private var c_qq:CheckBox = new CheckBox;		//im/get_avatarlist		private var l_qqInput:Label = new Label;		private var qqInput:TextInput = new TextInput;		//im/get_friendlist,		//campaign/get_participatedcount,		//campaign/get_awardfriendscount,		private var l_continue:Label = new Label;		//im/get_friendgroup		private var c_avatar:CheckBox = new CheckBox;		//campaign/get_participatedfriendscount		private var r_partiWeibo:RadioButton = new RadioButton;		private var r_partiIM:RadioButton = new RadioButton;		//campaign/get_participatedfriends		private var l_pfriends:Label = new Label;		private var n_pfriends:NumericStepper = new NumericStepper;		private var l_pfriends2:Label = new Label;		private var r_pfriendsWeibo:RadioButton = new RadioButton;		private var r_pfriendsIM:RadioButton = new RadioButton;		//campaign/get_closefriends		private var l_cfriends:Label = new Label;		private var n_cfriends:NumericStepper = new NumericStepper;		private var l_cfriends2:Label = new Label;		private var r_cfriendsWeibo:RadioButton = new RadioButton;		private var r_cfriendsIM:RadioButton = new RadioButton;		//campaign/get_awardfriends		private var l_wfriends:Label = new Label;		private var n_wfriends:NumericStepper = new NumericStepper;		private var l_wfriends2:Label = new Label;		private var r_wfriendsWeibo:RadioButton = new RadioButton;		private var r_wfriendsIM:RadioButton = new RadioButton;		//campaign/get_winnercount		private var l_wcount:Label = new Label;		private var lotteryInput:TextInput = new TextInput;		//weibo_read/friends/mutual_list		private var l_wfriendaccount:Label = new Label;		private var input_wfriendaccount:TextInput = new TextInput;		private var l_wfriendreq:Label = new Label;		private var n_wfriendreq:NumericStepper = new NumericStepper;		private var l_wfriendindex:Label = new Label;		private var n_wfriendindex:NumericStepper = new NumericStepper;								//weibo_write/friends/add		private var l_addwfriend:Label = new Label;		private var input_addwfriend:TextInput = new TextInput;				//other/get_weatheradinfo		private var l_weather:Label = new Label;		private var input_weather:TextInput = new TextInput;				public function SubOrder() {			this.addEventListener(ActionEvent.ORDER_CHANGE, orderViewChange);			this.addEventListener(ActionEvent.GRAB_PARAMS, onGrabParams);		}				private function orderViewChange(event:ActionEvent):void{			buildView(event.data)			}				private function onGrabParams(event:ActionEvent):void{			var _params:Object = new Object();			var arr:Array = new Array;			var str:String ="";			var n:int = 0;			switch(event.data){				//QQ信息类				case "im/get_baseinfo":								EBBase.UserActionCounter("im/get_baseinfo");				if(c_nick.selected) arr.push("nick");				if(c_gender.selected) arr.push("gender");				if(c_head.selected) arr.push("head");				str = arr[0];				if(arr.length>1){					for(n;n<arr.length; n++){						str+=("|"+arr[n]);						}					}				_params.attrs = str;				break;								case "im/get_mailaddress":				EBBase.UserActionCounter("im/get_mailaddress");				if(c_mail.selected) arr.push("mail");				if(c_qq.selected) arr.push("qq");				str = arr[0];				if(arr.length>1){					for(n; n<arr.length; n++){						str+=("|"+arr[n]);						}					}				_params.attrs = str;				break;								case "im/get_avatarlist":				_params.qqlist = qqInput.text;				break;								case "im/get_friendlist":				//no _params is needed here;				break;								case "im/get_friendgroup":				_params.avatar = (c_avatar.selected==true)?1:0;				break;								//活动信息类				case "campaign/get_participatedcount":				//no _params is needed here;				break;								case "campaign/get_participatedfriendscount":				_params.snstype = (r_partiIM.selected==true)?2:1;				break;								case "campaign/get_participatedfriends":				_params.count = n_pfriends.value;				_params.snstype = (r_partiIM.selected==true)?2:1;				break;								case "campaign/get_closefriendscount":				//no _params is needed here;				break;								case "campaign/get_closefriends":				_params.count = n_cfriends.value;				_params.snstype = (r_cfriendsIM.selected==true)?2:1;				break;								case "campaign/get_awardfriendscount":				//no _params is needed here;				break;								case "campaign/get_awardfriends":				_params.count = n_wfriends.value;				_params.snstype = (r_wfriendsIM.selected==true)?2:1;				break;								case "campaign/get_winnercount":				_params.lottery_id=lotteryInput.text;				break;								//微博信息类				case "weibo_read/user/info/baseinfo":				//no _params is needed here;				break;								case "weibo_read/friends/mutual_list":				_params.name = input_wfriendaccount.text;				_params.reqnum = n_wfriendreq.value;				_params.startindex = n_wfriendreq.value*(n_wfriendindex.value-1);				break;								case "weibo_read/friends/fanslist_s":				break;								case "weibo_read/friends/idollist_s":				break;								case "weibo_write/friends/add":				_params.name=input_addwfriend.text;				break;								case "profile/save_personalinfo":				break;								case "other/get_weatheradinfo":				_params.oid = input_weather.text;				break;				}			this.dispatchEvent(new ActionEvent(ActionEvent.PASSED_PARAMS,_params))			}						private function buildView(type:String):void{			//clear alll;			emptyChild()			//reblock;			switch(type){				//QQ信息类				case "im/get_baseinfo":				c_nick.label = "昵称"; c_nick.selected=true;				c_gender.label = "性别"; c_gender.x = c_nick.width; c_gender.selected=true;				c_head.label = "头像"; c_head.x  = c_gender.width+c_gender.x; c_head.selected=true;				this.addChild(c_nick);				this.addChild(c_gender);				this.addChild(c_head);				break;								case "im/get_mailaddress":				c_mail.label = "邮箱";c_mail.selected=true;				c_qq.label="QQ号码";c_qq.selected=true;c_qq.x = c_mail.width;				this.addChild(c_mail);				this.addChild(c_qq);				break;								case "im/get_avatarlist":				l_qqInput.text = "输入相关QQ号码，以逗号分隔开的QQ号，最多支持20个QQ号:";				l_qqInput.width = 320;				this.addChild(l_qqInput);				qqInput.x = 322;				this.addChild(qqInput);				break;								case "im/get_friendlist":				l_continue.text = "点击开始获取用户IM好友列表";				l_continue.width = 300;				this.addChild(l_continue);				break;								case "im/get_friendgroup":				this.addChild(c_avatar);				c_avatar.label = "是否同时获取头像";				c_avatar.width =200;				break;								//活动信息类				case "campaign/get_participatedcount":				l_continue.text = "点击开始获取活动参与人数";				l_continue.width = 300;				this.addChild(l_continue);				break;								case "campaign/get_participatedfriendscount":				r_partiWeibo.groupName = r_partiIM.groupName = "snstype";				this.addChild(r_partiIM);				this.addChild(r_partiWeibo); r_partiWeibo.x = r_partiIM.width+2;				r_partiWeibo.label = "微博";				r_partiIM.label = "IM";				r_partiIM.selected = true;				break;								case "campaign/get_participatedfriends":				l_pfriends.text = "返回好友数量:";l_pfriends.width=80;				this.addChild(l_pfriends);				n_pfriends.maximum = 10; n_pfriends.minimum=1; n_pfriends.value = 3;				this.addChild(n_pfriends); n_pfriends.x = 90;				l_pfriends2.text = "关系链类型:";				this.addChild(l_pfriends2); l_pfriends2.width=60;				l_pfriends2.x = n_pfriends.x+n_pfriends.width+20;				r_pfriendsWeibo.groupName = r_pfriendsIM.groupName = "snstype";				r_pfriendsWeibo.label = "微博";				r_pfriendsIM.label = "IM"; r_pfriendsIM.selected = true;				this.addChild(r_pfriendsIM);				this.addChild(r_pfriendsWeibo);				r_pfriendsIM.x = l_pfriends2.x+l_pfriends2.width;				r_pfriendsWeibo.x = r_pfriendsIM.x+r_pfriendsIM.width/2;				break;								case "campaign/get_closefriendscount":				l_continue.text = "点击开始获取参与活动亲密好友数量";				l_continue.width = 300;				this.addChild(l_continue);				break;								case "campaign/get_closefriends":				l_cfriends.text = "返回好友数量:";l_cfriends.width=80;				this.addChild(l_cfriends);				n_cfriends.maximum = 10; n_cfriends.minimum=1; n_cfriends.value = 3;				this.addChild(n_cfriends); n_cfriends.x = 90;				l_cfriends2.text = "关系链类型:";				this.addChild(l_cfriends2); l_cfriends2.width=60;				l_cfriends2.x = n_cfriends.x+n_cfriends.width+20;				r_cfriendsWeibo.groupName = r_cfriendsIM.groupName = "snstype";				r_cfriendsWeibo.label = "微博";				r_cfriendsIM.label = "IM"; r_cfriendsIM.selected = true;				this.addChild(r_cfriendsIM);				this.addChild(r_cfriendsWeibo);				r_cfriendsIM.x = l_cfriends2.x+l_cfriends2.width;				r_cfriendsWeibo.x = r_cfriendsIM.x+r_cfriendsIM.width/2;				break;								case "campaign/get_awardfriendscount":				l_continue.text = "点击开始获取中奖好友数量";				l_continue.width = 300;				this.addChild(l_continue);				break;								case "campaign/get_awardfriends":				l_wfriends.text = "返回中奖好友数量:";l_wfriends.width=80;				this.addChild(l_wfriends);				n_wfriends.maximum = 10; n_wfriends.minimum=1; n_wfriends.value = 3;				this.addChild(n_wfriends); n_wfriends.x = 90;				l_wfriends2.text = "关系链类型:";				this.addChild(l_wfriends2); l_wfriends2.width=60;				l_wfriends2.x = n_wfriends.x+n_wfriends.width+20;				r_wfriendsWeibo.groupName = r_wfriendsIM.groupName = "snstype";				r_wfriendsWeibo.label = "微博";				r_wfriendsIM.label = "IM"; r_wfriendsIM.selected = true;				this.addChild(r_wfriendsIM);				this.addChild(r_wfriendsWeibo);				r_wfriendsIM.x = l_wfriends2.x+l_wfriends2.width;				r_wfriendsWeibo.x = r_wfriendsIM.x+r_wfriendsIM.width/2;				break;								case "campaign/get_winnercount":				l_wcount.text = "活动奖池id:"; l_wcount.width =70;				lotteryInput.x = l_wcount.width;				this.addChild(l_wcount); this.addChild(lotteryInput);				break;								//微博信息类				case "weibo_read/user/info/baseinfo":				l_continue.text = "点击开始获取中奖好友数量";				l_continue.width = 300;				this.addChild(l_continue);				break;								case "weibo_read/friends/mutual_list":				l_wfriendaccount.text = "用户帐户名:";				this.addChild(l_wfriendaccount);				this.addChild(input_wfriendaccount);				input_wfriendaccount.x = 70;				l_wfriendreq.text = "请求个数:";  				this.addChild(l_wfriendreq);  				l_wfriendreq.x=input_wfriendaccount.x+input_wfriendaccount.width+10; 				this.addChild(n_wfriendreq);				n_wfriendreq.value = 10;				n_wfriendreq.maximum = 30;				n_wfriendreq.minimum = 1; 				n_wfriendreq.x = l_wfriendreq.x+60; 				l_wfriendindex.text = "起始位置:"; 				this.addChild(l_wfriendindex); 				l_wfriendindex.x=n_wfriendreq.x+n_wfriendreq.width+10;  				this.addChild(n_wfriendindex); 				n_wfriendindex.x=l_wfriendindex.x+60;				n_wfriendindex.value = 1;				n_wfriendindex.maximum = 30;				n_wfriendindex.minimum = 1;				break;								case "weibo_read/friends/fanslist_s":				break;								case "weibo_read/friends/idollist_s":				break;								case "weibo_write/friends/add":				l_addwfriend.text = '要收听人的微博帐号列表（非昵称）,多用户用","隔开';				l_addwfriend.width = 320;				this.addChild(l_addwfriend);				this.addChild(input_addwfriend);input_addwfriend.x=272;input_addwfriend.width=120;				break;								case "profile/save_personalinfo":				break;								case "other/get_weatheradinfo":				l_weather.text = '输入广告位订单id":';				l_weather.width = 120;				this.addChild(l_weather);				this.addChild(input_weather);input_weather.x=140;input_weather.width=120;				break;				}			}				private function emptyChild(){			var num:Number = this.numChildren;			for(var m:int=0; m<num;m++){				this.removeChildAt(0);				}			}						public function get currentView():String{			return _orderView;			}				public function set currentView(mes:String):void{			_orderView = mes;			this.dispatchEvent(new ActionEvent(ActionEvent.ORDER_CHANGE,mes))			}			}	}